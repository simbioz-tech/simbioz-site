"""
ü§ñ Simbioz Tech Telegram Bot

–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∑–∞—è–≤–æ–∫ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.

–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚úÖ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
‚úÖ –ü–æ—à–∞–≥–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫
‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ —Ñ–æ—Ç–æ
‚úÖ –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
‚úÖ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö
‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö –¥–ª—è –∞–¥–º–∏–Ω–æ–≤

–ö–æ–º–∞–Ω–¥—ã:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –°–ø—Ä–∞–≤–∫–∞
/admin - –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)

–ê–≤—Ç–æ—Ä: Simbioz Tech Team
"""

import os
import logging
import requests
from datetime import datetime
from telegram import Update, ParseMode, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler, ConversationHandler
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å .env —Ñ–∞–π–ª)
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('VITE_TELEGRAM_TOKEN')
CREATOR_CHAT_ID = '8022779606'

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
CHOOSING_SERVICE, ENTERING_NAME, ENTERING_EMAIL, ENTERING_MESSAGE, CONFIRMING = range(5)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ, –±–µ–∑ –ë–î)
user_data = {}

# –•—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
active_applications = {}

# –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
stats = {
    'total_users': 0,
    'total_applications': 0,
    'applications_today': 0,
    'last_reset': datetime.now().date()
}

# –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω—É)
unique_users = set()

def is_admin_chat(chat_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∞—Ç –∞–¥–º–∏–Ω—Å–∫–∏–º"""
    return str(chat_id) == CREATOR_CHAT_ID

def cleanup_old_applications():
    """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞—è–≤–æ–∫ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)"""
    current_time = datetime.now()
    to_remove = []
    
    for app_id, app_data in active_applications.items():
        try:
            app_time = datetime.strptime(app_data['timestamp'], '%d.%m.%Y %H:%M')
            if (current_time - app_time).days > 7:
                to_remove.append(app_id)
        except:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤—Ä–µ–º—è, —É–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É
            to_remove.append(app_id)
    
    for app_id in to_remove:
        del active_applications[app_id]
    
    if to_remove:
        logger.info(f"Cleaned up {len(to_remove)} old applications")

def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        chat_id = update.effective_chat.id
        user = update.effective_user
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if chat_id not in unique_users:
            unique_users.add(chat_id)
            stats['total_users'] += 1
        logger.info(f"New user started bot: {chat_id} - {user.username or 'No username'}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        show_main_menu(update, context)
        
    except Exception as e:
        logger.error(f"Error in start command: {e}")
        context.bot.send_message(chat_id=chat_id, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def show_main_menu(update, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º chat_id –∏ user –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if hasattr(update, 'callback_query') and update.callback_query:
            # –ï—Å–ª–∏ —ç—Ç–æ callback query (–∫–Ω–æ–ø–∫–∞)
            chat_id = update.callback_query.from_user.id
            user = update.callback_query.from_user
            is_callback = True
        else:
            # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            chat_id = update.effective_chat.id
            user = update.effective_user
            is_callback = False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω—Å–∫–∏–º —á–∞—Ç–æ–º
        if is_admin_chat(chat_id):
            # –î–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å
            keyboard = [
                [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='admin_stats')],
                [InlineKeyboardButton("üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏", callback_data='admin_applications')],
                [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='admin_panel')]
            ]
            welcome_message = (
                "üîß **–ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å Simbioz Tech Bot**\n\n"
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º!\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
            )
        else:
            # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data='new_application')],
                [InlineKeyboardButton("‚ÑπÔ∏è –û –Ω–∞—Å", callback_data='about_us')],
                [InlineKeyboardButton("üõ† –ù–∞—à–∏ —É—Å–ª—É–≥–∏", callback_data='services')],
                [InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è", callback_data='contact')],
                [InlineKeyboardButton("üÜò –¢–µ—Ö –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data='tech_support')]
            ]
            
            welcome_message = (
                f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name or '–¥—Ä—É–≥'}!\n\n"
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **Simbioz Tech** ü§ñ\n\n"
                "–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –∏–∑ Java-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ ML-–∏–Ω–∂–µ–Ω–µ—Ä–∞. –°–æ–∑–¥–∞—ë–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ, –Ω–∞–¥—ë–∂–Ω—ã–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞:\n"
                "‚Ä¢ üíª Frontend –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ª–æ–≥–∏–∫–∞\n"
                "‚Ä¢ ‚öôÔ∏è Backend –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n"
                "‚Ä¢ üîß DevOps –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞\n"
                "‚Ä¢ ü§ñ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ AI\n"
                "‚Ä¢ üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
                "‚Ä¢ üìä –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –∞—É–¥–∏—Ç\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
            )
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        if is_callback:
            # –ï—Å–ª–∏ —ç—Ç–æ callback, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            update.callback_query.edit_message_text(
                text=welcome_message,
                reply_markup=reply_markup,
                parse_mode=ParseMode.MARKDOWN
            )
        else:
            # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            context.bot.send_message(
                chat_id=chat_id, 
                text=welcome_message,
                reply_markup=reply_markup,
                parse_mode=ParseMode.MARKDOWN
            )
            
    except Exception as e:
        logger.error(f"Error in show_main_menu: {e}")
        try:
            if 'is_callback' in locals() and is_callback:
                update.callback_query.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            else:
                context.bot.send_message(chat_id=chat_id, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        except:
            # –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            logger.error(f"Failed to send error message: {e}")

def button_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    query.answer()
    
    if query.data == 'new_application':
        show_services_menu(query, context)
    elif query.data == 'about_us':
        show_about_us(query, context)
    elif query.data == 'services':
        show_services_detailed(query, context)
    elif query.data == 'contact':
        show_contact_info(query, context)
    elif query.data == 'tech_support':
        show_tech_support(query, context)
    elif query.data.startswith('service_'):
        handle_service_selection(query, context)
    elif query.data == 'back_to_main':
        show_main_menu(update, context)
    elif query.data == 'confirm_application':
        confirm_application(query, context)
    elif query.data == 'admin_stats':
        show_admin_stats(query, context)
    elif query.data == 'admin_applications':
        show_admin_applications(query, context)
    elif query.data == 'admin_panel':
        show_admin_panel(query, context)
    elif query.data.startswith('delete_app_'):
        delete_application(query, context)

def show_admin_panel(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å"""
    chat_id = query.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if not is_admin_chat(chat_id):
        query.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    keyboard = [
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='admin_stats')],
        [InlineKeyboardButton("üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏", callback_data='admin_applications')],
        [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='admin_panel')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "üîß **–ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å Simbioz Tech Bot**\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    )
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def show_admin_stats(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    chat_id = query.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if not is_admin_chat(chat_id):
        query.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    keyboard = [
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏", callback_data='admin_panel')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞—è–≤–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ–¥—Å—á–µ—Ç–æ–º
    cleanup_old_applications()
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_users = stats['total_users']
    total_applications = stats['total_applications']
    applications_today = stats['applications_today']
    active_applications_count = len(active_applications)
    
    conversion_rate = (total_applications / total_users * 100) if total_users > 0 else 0
    
    message = (
        "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞**\n\n"
        f"üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** {total_users}\n"
        f"üìù **–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫:** {total_applications}\n"
        f"üìÖ **–ó–∞—è–≤–æ–∫ —Å–µ–≥–æ–¥–Ω—è:** {applications_today}\n"
        f"‚è≥ **–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫:** {active_applications_count}\n"
        f"üìà **–ö–æ–Ω–≤–µ—Ä—Å–∏—è:** {conversion_rate:.1f}%\n\n"
        f"üïí **–û–±–Ω–æ–≤–ª–µ–Ω–æ:** {datetime.now().strftime('%d.%m.%Y %H:%M')}\n\n"
        "üí° –ö–æ–Ω–≤–µ—Ä—Å–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É."
    )
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def show_admin_applications(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    chat_id = query.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if not is_admin_chat(chat_id):
        query.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    logger.info(f"Admin {chat_id} requested applications list. Total applications: {len(active_applications)}")
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞—è–≤–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º
    cleanup_old_applications()
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Markdown —Å–∏–º–≤–æ–ª–æ–≤
    def escape_markdown(text):
        if not text:
            return text
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
        chars_to_escape = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
        for char in chars_to_escape:
            text = text.replace(char, f'\\{char}')
        return text
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏
    if not active_applications:
        message = (
            "üìù **–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏**\n\n"
            "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫.\n\n"
            "üí° –ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∑–∞—è–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã."
        )
        keyboard = [
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏", callback_data='admin_panel')]
        ]
    else:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞—è–≤–∫–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
        sorted_applications = sorted(
            active_applications.values(), 
            key=lambda x: x['timestamp'], 
            reverse=True
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞—è–≤–æ–∫
        recent_applications = sorted_applications[:5]
        
        message = f"üìù **–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏** ({len(active_applications)})\n\n"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è
        keyboard = []
        
        for i, app in enumerate(recent_applications, 1):
            # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
            safe_name = escape_markdown(app['name'])
            safe_email = escape_markdown(app['email'])
            safe_service = escape_markdown(app['service'])
            safe_message = escape_markdown(app['message'][:50])
            safe_username = escape_markdown(app['username'] or '–ë–µ–∑ username')
            
            message += (
                f"**#{i} {app['id']}** - {app['timestamp']}\n"
                f"üë§ {safe_name} ({safe_email})\n"
                f"üõ† {safe_service}\n"
                f"üí¨ {safe_message}{'...' if len(app['message']) > 50 else ''}\n"
                f"üì± **@{safe_username}**\n\n"
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞—è–≤–∫–∏
            keyboard.append([InlineKeyboardButton(f"üóë –£–¥–∞–ª–∏—Ç—å {app['id']}", callback_data=f'delete_app_{app["id"]}')])
        
        if len(active_applications) > 5:
            message += f"üí° –ü–æ–∫–∞–∑–∞–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 –∏–∑ {len(active_applications)} –∑–∞—è–≤–æ–∫.\n\n"
        
        message += "üí° –ó–∞—è–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞."
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏", callback_data='admin_panel')])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    try:
        query.edit_message_text(
            text=message,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )
        logger.info(f"Successfully showed applications list to admin {chat_id}")
    except Exception as e:
        logger.error(f"Error showing applications list to admin {chat_id}: {e}")
        # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ Markdown
        try:
            query.edit_message_text(
                text=message.replace('*', '').replace('_', ''),
                reply_markup=reply_markup
            )
        except Exception as e2:
            logger.error(f"Failed to send applications list even without Markdown: {e2}")
            query.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫")

def show_services_menu(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥"""
    keyboard = [
        [InlineKeyboardButton("üíª Frontend –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ª–æ–≥–∏–∫–∞", callback_data='service_frontend')],
        [InlineKeyboardButton("‚öôÔ∏è Backend –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", callback_data='service_backend')],
        [InlineKeyboardButton("üîß DevOps –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞", callback_data='service_devops')],
        [InlineKeyboardButton("ü§ñ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ AI", callback_data='service_ml')],
        [InlineKeyboardButton("üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data='service_integration')],
        [InlineKeyboardButton("üìä –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –∞—É–¥–∏—Ç", callback_data='service_consulting')],
        [InlineKeyboardButton("üõ† –î—Ä—É–≥–æ–µ", callback_data='service_other')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "üõ† **–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —É—Å–ª—É–≥—É:**\n\n"
        "–ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä IT-—Ä–µ—à–µ–Ω–∏–π –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞."
    )
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def show_about_us(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏"""
    keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "üè¢ **–û –∫–æ–º–ø–∞–Ω–∏–∏ Simbioz Tech**\n\n"
        "–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤. –°–æ–∑–¥–∞—ë–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ, –Ω–∞–¥—ë–∂–Ω—ã–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞: –æ—Ç —Ñ—Ä–æ–Ω—Ç–∞ —Å –±–µ–∫–æ–º –¥–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.\n\n"
        "**–ù–∞—à–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã:**\n"
        "‚úÖ –†–∞–±–æ—Ç–∞–µ–º –±—ã—Å—Ç—Ä–æ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ\n"
        "‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
        "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\n"
        "‚úÖ –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å\n\n"
        "**–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:**\n"
        "‚Ä¢ Fronted —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\n"
        "‚Ä¢ Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ Java\n"
        "‚Ä¢ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ AI\n"
        "‚Ä¢ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n"
        "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è\n"
        "‚Ä¢ DevOps —Ä–µ—à–µ–Ω–∏—è –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞\n\n"
        "–ì–æ—Ç–æ–≤—ã –æ–±—Å—É–¥–∏—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç! üöÄ"
    )
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def show_services_detailed(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ª—É–≥–∞—Ö"""
    keyboard = [
        [InlineKeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data='new_application')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "üõ† **–ù–∞—à–∏ —É—Å–ª—É–≥–∏**\n\n"
        "**üíª Frontend –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ª–æ–≥–∏–∫–∞**\n"
        "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –Ω–∞ React, Vue, TypeScript\n"
        "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å backend, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –ª–æ–≥–∏–∫–∏\n"
        "‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n\n"
        "**‚öôÔ∏è Backend –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**\n"
        "‚Ä¢ –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤\n"
        "‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ REST/gRPC API\n"
        "‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏\n"
        "‚Ä¢ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤—ã—Ö —Å–∏—Å—Ç–µ–º\n\n"
        "**üîß DevOps –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞**\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CI/CD, Docker, Kubernetes\n"
        "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º\n\n"
        "**ü§ñ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ AI**\n"
        "‚Ä¢ –í–Ω–µ–¥—Ä–µ–Ω–∏–µ ML-–º–æ–¥–µ–ª–µ–π\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
        "‚Ä¢ –ü—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n"
        "‚Ä¢ –ß–∞—Ç-–±–æ—Ç—ã –∏ Telegram-–±–æ—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞\n\n"
        "**üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞**\n"
        "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å API, –ø–ª–∞—Ç—ë–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏, CRM\n"
        "‚Ä¢ –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ, —Ä–∞–∑–≤–∏—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π\n"
        "‚Ä¢ –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã\n\n"
        "**üìä –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –∞—É–¥–∏—Ç**\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –∫–æ–¥-—Ä–µ–≤—å—é\n"
        "‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n"
        "‚Ä¢ –ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π\n\n"
        "–ì–æ—Ç–æ–≤—ã –æ–±—Å—É–¥–∏—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç! üöÄ"
    )
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def show_tech_support(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    chat_id = query.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if is_admin_chat(chat_id):
        # –î–ª—è –∞–¥–º–∏–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        show_admin_support_messages(query, context)
        return
    
    # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    keyboard = [
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "üÜò **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞**\n\n"
        "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
        "üí° **–ß—Ç–æ –º–æ–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å:**\n"
        "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã\n"
        "‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –ø–æ —É—Å–ª—É–≥–∞–º\n"
        "‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n"
        "‚Ä¢ –õ—é–±—ã–µ –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã\n\n"
        "üìù **–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:**"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    context.user_data['state'] = 'tech_support'
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def show_admin_support_messages(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    keyboard = [
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏", callback_data='admin_panel')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    message = (
        "üÜò **–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏**\n\n"
        "–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–±—Ä–∞—Ç–∏–≤—à–∏—Ö—Å—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
        "üí° –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."
    )
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def handle_support_message(update, context):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    chat_id = update.effective_chat.id
    user = update.effective_user
    message_text = update.message.text
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    context.user_data.clear()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    keyboard = [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_to_main')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    success_message = (
        "‚úÖ **–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!**\n\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
        "üïí **–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:** –¥–æ 24 —á–∞—Å–æ–≤"
    )
    
    update.message.reply_text(
        text=success_message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    admin_message = (
        f"üÜò **–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏**\n\n"
        f"üë§ **–û—Ç:** {f'@{user.username}' if user.username else f'ID {chat_id}'}\n"
        f"üìù **–ò–º—è:** {user.first_name or ''} {user.last_name or ''}\n"
        f"üí¨ **–°–æ–æ–±—â–µ–Ω–∏–µ:**\n{message_text}\n\n"
        f"üïí **–í—Ä–µ–º—è:** {datetime.now().strftime('%d.%m.%Y %H:%M')}"
    )
    
    context.bot.send_message(
        chat_id=CREATOR_CHAT_ID,
        text=admin_message
    )
    
    logger.info(f"Support message from {chat_id} - {user.username or 'No username'}")

def delete_application(query, context):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–æ–º"""
    chat_id = query.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if not is_admin_chat(chat_id):
        query.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞—è–≤–∫–∏ –∏–∑ callback_data
    app_id = query.data.replace('delete_app_', '')
    
    if app_id in active_applications:
        # –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É
        deleted_app = active_applications.pop(app_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        query.answer(f"‚úÖ –ó–∞—è–≤–∫–∞ {app_id} —É–¥–∞–ª–µ–Ω–∞")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
        show_admin_applications(query, context)
        
        logger.info(f"Application {app_id} deleted by admin {chat_id}")
    else:
        query.answer("‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def show_contact_info(query, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
    keyboard = [
        [InlineKeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data='new_application')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "üìû **–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏**\n\n"
        "**üåê –í–µ–±-—Å–∞–π—Ç:** [simbioz.tech](https://simbioz-tech.ru)\n"
        "**üìß Email:** simbioztech@yandex.ru\n"
        "**üêô GitHub:** [github.com/simbioz](https://github.com/simbioz-tech)\n\n"
        "**‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:**\n"
        "–ü–Ω-–ü—Ç: 9:00 - 19:00 (–ú–°–ö)\n"
        "–°–±-–í—Å: –ü–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏\n\n"
        "**üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:**\n"
        "–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤!\n\n"
        "**üí° –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã:**\n"
        "1. –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ –∏ –∞–Ω–∞–ª–∏–∑ (1-2 –¥–Ω—è)\n"
        "2. –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è (3-5 –¥–Ω–µ–π)\n"
        "3. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (2-4 –Ω–µ–¥–µ–ª–∏)\n"
        "4. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è (1-2 –Ω–µ–¥–µ–ª–∏)\n"
        "5. –ó–∞–ø—É—Å–∫ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ (3-7 –¥–Ω–µ–π)\n"
        "6. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ (–ø–æ—Å—Ç–æ—è–Ω–Ω–æ)"
    )
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def handle_service_selection(query, context):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏"""
    chat_id = query.from_user.id
    service = query.data.replace('service_', '')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É
    if chat_id not in user_data:
        user_data[chat_id] = {}
    user_data[chat_id]['service'] = service
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ —É—Å–ª—É–≥–∞–º", callback_data='new_application')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    service_names = {
        'frontend': 'üíª Frontend –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ª–æ–≥–∏–∫–∞',
        'backend': '‚öôÔ∏è Backend –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞',
        'devops': 'üîß DevOps –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
        'ml': 'ü§ñ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ AI',
        'integration': 'üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        'consulting': 'üìä –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –∞—É–¥–∏—Ç',
        'other': 'üõ† –î—Ä—É–≥–æ–µ'
    }
    
    message = (
        f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —É—Å–ª—É–≥–∞: **{service_names.get(service, service)}**\n\n"
        "üìù –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ **–∏–º—è**:\n\n"
        "–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω"
    )
    
    query.edit_message_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    context.user_data['state'] = ENTERING_NAME
def handle_message(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        chat_id = update.effective_chat.id
        user = update.effective_user
        message_text = update.message.text
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        current_state = context.user_data.get('state')
        
        if current_state == ENTERING_NAME:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
            if chat_id not in user_data:
                user_data[chat_id] = {}
            user_data[chat_id]['name'] = message_text
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É email
            keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='new_application')]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            message = (
                f"‚úÖ –ò–º—è: **{message_text}**\n\n"
                "üìß –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à **email**:\n\n"
                "–ü—Ä–∏–º–µ—Ä: example@mail.com"
            )
            
            update.message.reply_text(
                text=message,
                reply_markup=reply_markup,
                parse_mode=ParseMode.MARKDOWN
            )
            context.user_data['state'] = ENTERING_EMAIL
            
        elif current_state == ENTERING_EMAIL:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º email
            user_data[chat_id]['email'] = message_text
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è
            keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='new_application')]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            message = (
                f"‚úÖ Email: **{message_text}**\n\n"
                "üí¨ –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –∑–∞–¥–∞—á—É:\n\n"
                "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Ü–µ–ª—è—Ö, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö, —Å—Ä–æ–∫–∞—Ö –∏ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –≤–∞–∂–Ω—ã—Ö –¥–µ—Ç–∞–ª—è—Ö."
            )
            
            update.message.reply_text(
                text=message,
                reply_markup=reply_markup,
                parse_mode=ParseMode.MARKDOWN
            )
            context.user_data['state'] = ENTERING_MESSAGE
            
        elif current_state == ENTERING_MESSAGE:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            user_data[chat_id]['message'] = message_text
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            show_application_confirmation(update, context)
            
        elif current_state == 'tech_support':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
            handle_support_message(update, context)
            
        else:
            # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏)
            handle_general_message(update, context)
            
    except Exception as e:
        logger.error(f"Error handling message: {e}")
        update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def show_application_confirmation(update, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏"""
    chat_id = update.effective_chat.id
    user = update.effective_user
    
    if chat_id not in user_data:
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return
    
    data = user_data[chat_id]
    service_names = {
        'frontend': 'üíª Frontend –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ª–æ–≥–∏–∫–∞',
        'backend': '‚öôÔ∏è Backend –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞',
        'devops': 'üîß DevOps –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
        'ml': 'ü§ñ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ AI',
        'integration': 'üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        'consulting': 'üìä –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –∞—É–¥–∏—Ç',
        'other': 'üõ† –î—Ä—É–≥–æ–µ'
    }
    
    keyboard = [
        [InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data='confirm_application')],
        [InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data='new_application')],
        [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    confirmation_message = (
        "üìã **–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:**\n\n"
        f"üë§ **–ò–º—è:** {data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"üìß **Email:** {data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üõ† **–£—Å–ª—É–≥–∞:** {service_names.get(data.get('service', ''), data.get('service', '–ù–µ –≤—ã–±—Ä–∞–Ω–∞'))}\n"
        f"üí¨ **–°–æ–æ–±—â–µ–Ω–∏–µ:**\n{data.get('message', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
        "–í—Å—ë –≤–µ—Ä–Ω–æ? –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É' –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏."
    )
    
    update.message.reply_text(
        text=confirmation_message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )
    context.user_data['state'] = CONFIRMING

def handle_general_message(update, context):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    chat_id = update.effective_chat.id
    user = update.effective_user
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏
    keyboard = [
        [InlineKeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data='new_application')],
        [InlineKeyboardButton("üÜò –¢–µ—Ö –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data='tech_support')],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "ü§ñ **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏**\n\n"
        "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é:\n\n"
        "‚Ä¢ üìù **–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É** - –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç\n"
        "‚Ä¢ üÜò **–¢–µ—Ö –ü–æ–¥–¥–µ—Ä–∂–∫–∞** - –¥–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n"
        "‚Ä¢ üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é** - –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    update.message.reply_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def confirm_application(query, context):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏"""
    chat_id = query.from_user.id
    user = query.from_user
    
    if chat_id not in user_data:
        query.answer("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    data = user_data[chat_id]
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats['total_applications'] += 1
    if datetime.now().date() == stats['last_reset']:
        stats['applications_today'] += 1
    else:
        stats['applications_today'] = 1
        stats['last_reset'] = datetime.now().date()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    keyboard = [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_to_main')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    success_message = (
        "üéâ **–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!**\n\n"
        "‚úÖ –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ **2 —á–∞—Å–æ–≤**.\n\n"
        "üìû –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å—Ä–æ—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é.\n\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üöÄ"
    )
    
    query.edit_message_text(
        text=success_message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É
    service_names = {
        'frontend': 'üíª Frontend –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ª–æ–≥–∏–∫–∞',
        'backend': '‚öôÔ∏è Backend –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞',
        'devops': 'üîß DevOps –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
        'ml': 'ü§ñ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ AI',
        'integration': 'üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        'consulting': 'üìä –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –∞—É–¥–∏—Ç',
        'other': 'üõ† –î—Ä—É–≥–æ–µ'
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Markdown —Å–∏–º–≤–æ–ª–æ–≤
    def escape_markdown(text):
        if not text:
            return text
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
        chars_to_escape = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
        for char in chars_to_escape:
            text = text.replace(char, f'\\{char}')
        return text
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
    safe_name = escape_markdown(data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'))
    safe_email = escape_markdown(data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω'))
    safe_service = escape_markdown(service_names.get(data.get('service', ''), data.get('service', '–ù–µ –≤—ã–±—Ä–∞–Ω–∞')))
    safe_message = escape_markdown(data.get('message', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'))
    safe_username = escape_markdown(user.username or '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
    safe_user_name = escape_markdown(f"{user.first_name or ''} {user.last_name or ''}".strip())
    
    admin_message = (
        f"üìù **–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{stats['total_applications']}**\n\n"
        f"üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:**\n"
        f"‚Ä¢ ID: `{chat_id}`\n"
        f"‚Ä¢ Username: {f'@{safe_username}' if user.username else '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n"
        f"‚Ä¢ –ò–º—è: {safe_user_name}\n\n"
        f"üìã **–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:**\n"
        f"‚Ä¢ –ò–º—è: {safe_name}\n"
        f"‚Ä¢ Email: {safe_email}\n"
        f"‚Ä¢ –£—Å–ª—É–≥–∞: {safe_service}\n"
        f"‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ:\n{safe_message}\n\n"
        f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
        f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {stats['total_applications']}\n"
        f"‚Ä¢ –ó–∞—è–≤–æ–∫ —Å–µ–≥–æ–¥–Ω—è: {stats['applications_today']}\n"
        f"‚Ä¢ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
    )
    
    context.bot.send_message(
        chat_id=CREATOR_CHAT_ID,
        text=admin_message,
        parse_mode=ParseMode.MARKDOWN
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
    application_id = f"app_{stats['total_applications']}"
    active_applications[application_id] = {
        'id': application_id,
        'user_id': chat_id,
        'username': user.username,
        'user_name': f"{user.first_name or ''} {user.last_name or ''}".strip(),
        'name': data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'),
        'email': data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω'),
        'service': service_names.get(data.get('service', ''), data.get('service', '–ù–µ –≤—ã–±—Ä–∞–Ω–∞')),
        'message': data.get('message', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'),
        'timestamp': datetime.now().strftime('%d.%m.%Y %H:%M'),
        'status': 'new'
    }
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if chat_id in user_data:
        del user_data[chat_id]
    context.user_data.clear()
    
    logger.info(f"Application submitted: {chat_id} - {user.username or 'No username'}")

def handle_file(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤"""
    try:
        chat_id = update.effective_chat.id
        user = update.effective_user
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        if update.message.document:
            file_info = update.message.document
            file_name = file_info.file_name
            file_size = file_info.file_size
            file_id = file_info.file_id
        elif update.message.photo:
            file_info = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
            file_name = "photo.jpg"
            file_size = file_info.file_size
            file_id = file_info.file_id
        else:
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        context.bot.send_message(
            chat_id=chat_id, 
            text="‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à —Ñ–∞–π–ª! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–≥–æ –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é
        file_message = (
            f"üìé –ù–æ–≤—ã–π —Ñ–∞–π–ª:\n"
            f"–û—Ç: {f'@{user.username}' if user.username else f'ID {chat_id}'}\n"
            f"–ò–º—è: {user.first_name or ''} {user.last_name or ''}\n"
            f"–§–∞–π–ª: {file_name}\n"
            f"–†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç"
        )
        context.bot.send_message(chat_id=CREATOR_CHAT_ID, text=file_message)
        
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ñ–∞–π–ª —Å–æ–∑–¥–∞—Ç–µ–ª—é
        context.bot.forward_message(
            chat_id=CREATOR_CHAT_ID,
            from_chat_id=chat_id,
            message_id=update.message.message_id
        )
        
        logger.info(f"File received from {chat_id} - {user.username or 'No username'}: {file_name}")
    except Exception as e:
        logger.error(f"Error handling file: {e}")
        context.bot.send_message(chat_id=chat_id, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def error_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Update {update} caused error {context.error}")

def admin_command(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏"""
    chat_id = update.effective_chat.id
    
    if not is_admin_chat(chat_id):
        update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å
    keyboard = [
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='admin_stats')],
        [InlineKeyboardButton("üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏", callback_data='admin_applications')],
        [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='admin_panel')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "üîß **–ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å Simbioz Tech Bot**\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    )
    
    update.message.reply_text(
        text=message,
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

def help_command(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    chat_id = update.effective_chat.id
    
    help_message = (
        "ü§ñ **Simbioz Tech Bot - –ü–æ–º–æ—â—å**\n\n"
        "**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
        "‚Ä¢ `/start` - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ `/help` - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        "**–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:**\n"
        "‚Ä¢ –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ –£–∑–Ω–∞–π—Ç–µ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö\n"
        "‚Ä¢ –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏\n\n"
        "**–î–ª—è –∞–¥–º–∏–Ω–æ–≤:**\n"
        "‚Ä¢ `/admin` - –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!"
    )
    
    update.message.reply_text(
        text=help_message,
        parse_mode=ParseMode.MARKDOWN
    )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    if not TOKEN:
        logger.error("–û—à–∏–±–∫–∞: VITE_TELEGRAM_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env")
        return

    try:
        # –°–æ–∑–¥–∞–µ–º updater
        updater = Updater(token=TOKEN, use_context=True)
        dispatcher = updater.dispatcher

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        dispatcher.add_handler(CommandHandler("start", start))
        dispatcher.add_handler(CommandHandler("help", help_command))
        dispatcher.add_handler(CommandHandler("admin", admin_command))
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
        dispatcher.add_handler(MessageHandler(Filters.document | Filters.photo, handle_file))
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
        dispatcher.add_handler(CallbackQueryHandler(button_handler))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        dispatcher.add_error_handler(error_handler)

        logger.info("Telegram bot is starting...")
        print("ü§ñ Telegram bot is running...")
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ /admin")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        updater.start_polling()
        updater.idle()
        
    except Exception as e:
        logger.error(f"Error starting bot: {e}")
        print(f"‚ùå Error starting bot: {e}")

if __name__ == '__main__':
    main()